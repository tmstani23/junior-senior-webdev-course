{"version":3,"sources":["components/CardList.js","components/Card.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["CardList","Component","robots","Error","SearchBox","searchChange","className","onChange","type","placeholder","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","this","setState","App","searchField","onSearchChange","event","target","value","fetch","then","response","json","filteredRobots","filter","name","toLowerCase","includes","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAmCeA,GChCIC,YDCF,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,gBEaTC,EAjBG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAIhB,OACI,yBAAKC,UAAU,OACX,2BACIC,SAAYF,EACZC,UAAW,mCACXE,KAAM,SACNC,YAAa,oBCGdC,EAbA,SAACC,GACZ,OACI,yBAAKC,MAAO,CACRC,SAAU,SACVC,OAAQ,oBACRC,OAAQ,UAEPJ,EAAMK,WCYJC,E,4MAjBXC,MAAQ,CACJC,UAAU,G,kEAKVC,KAAKC,SAAS,CAACF,UAAU,M,+BAKzB,OAAOC,KAAKF,MAAMC,SACZ,iEACAC,KAAKT,MAAMK,a,GAfEf,aC8CZqB,E,4MAzCXJ,MAAQ,CACJhB,OAAQ,GACRqB,YAAa,I,EAWjBC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAACE,YAAaE,EAAMC,OAAOC,S,kEAVxB,IAAD,OACfC,MAAM,8CACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACF,EAAKV,SAAS,CAACnB,OAAQ6B,S,+BASzB,IAAD,OAEDC,EAAiBZ,KAAKF,MAAMhB,OAAO+B,QAAO,SAAA/B,GAC1C,OAAOA,EAAOgC,KAAKC,cAAcC,SAAS,EAAKlB,MAAMK,YAAYY,kBAGrE,OACI,yBAAK7B,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWD,aAAce,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUtB,OAAQ8B,W,GA/BxBK,IAAMpC,W,MCCxBqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,6BACE,kBAAC,EAAD,QAIJC,SAASC,eAAe,U","file":"static/js/main.2058dd44.chunk.js","sourcesContent":["import Card from './Card'\r\nimport React from 'react';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    if(true) {\r\n        throw new Error('ERRORRRR!!');\r\n    }\r\n\r\n    return !robots.length > 0 \r\n        ? <h1 className = 'tc'> Loading...</h1>\r\n        : (\r\n            <div>\r\n                {   \r\n                    robots.map((robot, i) => {\r\n                        console.log(robot)\r\n                        return (\r\n                            <Card \r\n                                key = {i} \r\n                                id={robot.id} \r\n                                name={robot.name} \r\n                                email={robot.email} \r\n                            />\r\n                        )\r\n            \r\n                    })\r\n                   \r\n                } \r\n                    \r\n            </div>\r\n            \r\n        )\r\n    \r\n}\r\n\r\nexport default CardList;","import React, {Component} from 'react';\r\n\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div className ='bg-animate hover-bg-light-blue tc bw2 shadow5 bg-light-green dib br3 pa3 ma2 grow'>\r\n                <img alt='robots' src={`https://robohash.org/${this.props.id}?200x200`}/>\r\n                <h2>{this.props.name}</h2>\r\n                <p>{this.props.email}</p>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                onChange = {searchChange}\r\n                className ='pa3 ba b--green bg-lightest-blue'\r\n                type ='search' \r\n                placeholder ='search robots'\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{\r\n            overflow: 'scroll',\r\n            border: '1px solid #0ccac4',\r\n            height: '500px',\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    \r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    //Lifecycle method runs if there is an error\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        \r\n        return this.state.hasError \r\n            ? <h1>It looks like there was an error.</h1>\r\n            : this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        robots: [],\r\n        searchField: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n         fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({robots: json})\r\n            })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        // Update state with input field data\r\n        this.setState({searchField: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        // Filter the robots and return an array containing only robots that match the searchbox field\r\n        let filteredRobots = this.state.robots.filter(robots => {   \r\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase())\r\n        })\r\n\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport App from './containers/App';\nimport './styles/App.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}